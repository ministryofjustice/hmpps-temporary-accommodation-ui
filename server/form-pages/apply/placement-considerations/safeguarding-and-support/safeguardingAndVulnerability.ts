import { TemporaryAccommodationApplication as Application } from '@approved-premises/api'
import type { TaskListErrors, YesOrNoWithDetail } from '@approved-premises/ui'
import { Page } from '../../../utils/decorators'

import TasklistPage from '../../../tasklistPage'
import { yesOrNoResponseWithDetail } from '../../../utils'

type SafeguardingAndVulnerabilityBody = YesOrNoWithDetail<'concerns'>

@Page({ name: 'safeguarding-and-vulnerability', bodyProperties: ['concerns', 'concernsDetail'] })
export default class SafeguardingAndVulnerability implements TasklistPage {
  title = 'Safeguarding and vulnerability'

  questions = {
    concerns: 'Do you have any concerns about safeguarding and/or vulnerability?',
  }

  constructor(readonly body: Partial<SafeguardingAndVulnerabilityBody>, readonly application: Application) {}

  response() {
    return {
      [this.questions.concerns]: yesOrNoResponseWithDetail('concerns', this.body),
    }
  }

  previous() {
    return 'dashboard'
  }

  next() {
    return 'support-in-the-community'
  }

  errors() {
    const errors: TaskListErrors<this> = {}

    if (!this.body.concerns) {
      errors.concerns = 'You must specify if you have any concerns about safeguarding and/or vulnerability'
    }

    if (this.body.concerns === 'yes' && !this.body.concernsDetail) {
      errors.concernsDetail = 'You must provide details of any concerns about safeguarding and/or vulnerability'
    }

    return errors
  }
}
